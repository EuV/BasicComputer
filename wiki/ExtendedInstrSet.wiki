#summary Расширенный набор команд БЭВМ

= Расширенный набор команд [bcomp БЭВМ] =

<wiki:toc max_depth="1"/>

= Набор команд =
|| *Наименование* || *Мнемоника* || *Код* || *Описание* ||
|||||||| *Безадресные команды* ||
|| Нет операции || NOP || 0000 || ||
|| Останов || HLT || 0001 || ||
|| Разрешение прерываний || EI || 0002 || ||
|| Запрещение прерываний || DI || 0003 || ||
||||||||||
|| Очистка флага переноса || CLC || 0004 || 0 → С ||
|| Инверсия флага переноса || CMC || 0005 || (!С) → С ||
||||||||||
|| Помещение аккумулятора в стек || PUSH || 0007 || ||
|| Очистка аккумулятора || CLA || 0008 || 0 → А ||
|| Инверсия аккумулятора || CMA || 0009 || (!А) → А ||
|| Инкремент аккумулятора || INC || 000A || (А) + 1 → А ||
|| Декремент аккумулятора || DEC || 000B || (А) - 1 → А ||
|| Циклический сдвиг влево || ROL || 000C || Содержимое А и С сдвигается влево ||
|| Циклический сдвиг вправо || ROR || 000D || Содержимое А и С сдвигается вправо ||
|| Возврат из подпрограммы || RET || 000E || ||
|| Получение аккумулятора из стека || POP || 000F || ||
|||||||| *Команды ввода-вывода* ||
|| Очистка флага ВУ || CLF ВУ || 10XX || ||
|| Опрос флага ВУ || TSF ВУ || 11XX || Если флаг ВУ = 1, то (СК) + 1 → СК ||
|| Ввод || IN ВУ || 12XX || (ВУ) → А ||
|| Вывод || OUT ВУ || 13XX || (А) → ВУ ||
|||||||| *Адресные команды* ||
|| Обращение к подпрограмме || CALL М || 2XXX || (СК) → М; М + 1 → СК ||
|| Безусловный переход || JMP М || 3XXX || М → СК ||
||||||||||
|| Переход, если перенос || BCS М || 4XXX || Если (С) = 1, то М → СК ||
|| Переход, если плюс || BPL М || 5XXX || Если (А) ≥ 0, то М → СК ||
|| Переход, если минус || BMI М || 6XXX || Если (А) < 0, то М → СК ||
|| Переход, если нуль || BEQ М || 7XXX || Если (А) = 0, то М → СК ||
||||||||||
|| Пересылка || MOV М || 8XXX || (A) → М ||
|| Сравнение || CMP М || 9XXX || (A) - (М) → C, N, Z ||
|| Декремент и пропуск || LOOP М || AXXX || (М) - 1 → М; Если (М) ≥ 0, то (СК) + 1 → СК ||
|| Приращение и пропуск || ISZ М || BXXX || (М) + 1 → М; Если (М) ≥ 0, то (СК) + 1 → СК ||
||||||||||
|| Вычитание || SUB М || CXXX || (A) - (М) → A ||
|| Сложение с переносом || ADC М || DXXX || (A) + (С) + (М) → A ||
|| Сложение || ADD М || EXXX || (A) + (М) → A ||
|| Логическое умножение || AND М || FXXX || (A) & (М) → A ||
 
= Реализация =
Расширенный набор команд реализован в:
 # [ExtendedMicroProgram Расширенной микропрограмме]

= Стэк =
В связи с отсутствием в БЭВМ отдельного регистра для хранение указателя стэка используется ячейка памяти с адресом 7FF. Указатель стэка устанавливается в значение по умолчанию при выполнении пультовой операции Пуск. Для программ, использующих стэк, выполнение пультовой операции Пуск является обязательным.

= Отличия набора команд =
 # Коды всех команд изменены
 # Убрано понятие индексных ячеек. При косвенной адресации инкремент содержимого ячейки памяти происходит если старший бит указанной в команде ячейки равен 1.
 # Добавлена команда LOOP, предназначенная для организации циклов с предусловием. Осуществляет декремент счётчика. Следующая команда пропускается при достижении отрицательного значения.
 # Добавлена команда CMP, которая из содержимого аккумулятора вычитает содержимое указанной ячейки памяти и сохраняет результат во флагах C, N, Z.
 # Для команды BR изменена мнемоника на JMP.
 # Команда JSR заменена командой CALL, которая помещает адрес возврата в стэк.
 # Добавлена команда RET, предназначенная для возврата из подпрограммы.
 # Добавлены команды PUSH и POP, соответственно сохранящие и восстанавливающие значение аккумулятора из стэка.
